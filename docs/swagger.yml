openapi: 3.0.3
info:
  title: Swagger API E-Commerce
  description: |-
    Swagger API E-Commerce Documentation
  version: 1.0.0
servers:
  - url: http://localhost:5000
  - url: http://localhost:5001
  - url: http://localhost:5002
  - url: http://localhost:5003
  - url: http://localhost:5004
  - url: http://localhost:5005
  - url: http://localhost:5006
  - url: http://localhost:5007
  - url: http://localhost:5008
  - url: http://localhost:5009
  - url: http://localhost:5010
  - url: http://localhost:5011
  - url: http://localhost:5012
  - url: http://localhost:5013
  - url: http://localhost:5014
tags:
  - name: address
    description: Address
  - name: auth
    description: Login and Register
  - name: cart
    description: Cart
  - name: cms
    description: Content Management System
  - name: product
    description: Product
  - name: order
    description: Order
  - name: payment
    description: Payment
  - name: review
    description: Review
  - name: splash screen
    description: Splash (CMS Endpoint)
  - name: store
    description: Store (CMS Endpoint)
  - name: user
    description: User Profile
  - name: voucher
    description: Voucher
  - name: wishlist
    description: Wishlist
paths:
  /address:
    get:
      tags:
        - address
      summary: Get Address by User ID
      parameters:
        - name: user-id
          in: header
          description: user-id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    format: int
                    example: 200
                  message:
                    type: string
                    format: string
                    example: "Ok"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Address'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    post:
      tags:
        - address
      summary: Insert Multiple Address
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AddressRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    format: int
                    example: 200
                  message:
                    type: string
                    format: string
                    example: "Ok"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Address'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    delete:
      tags:
        - address
      summary: Delete Address By Address ID
      parameters:
        - name: address_id
          in: query
          description: address_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkDelete'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /v1/HTdm6ZFo2Hd:
    get:
      tags:
        - address
      summary: Get Address by User ID
      parameters:
        - name: Authorization
          in: header
          description: Bearer Token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    format: int
                    example: 200
                  message:
                    type: string
                    format: string
                    example: "Ok"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Address'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    post:
      tags:
        - address
      summary: Insert Multiple Address
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AddressRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    format: int
                    example: 200
                  message:
                    type: string
                    format: string
                    example: "Ok"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Address'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    delete:
      tags:
        - address
      summary: Delete Address By Address ID
      parameters:
        - name: address_id
          in: query
          description: address_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkDelete'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /carts:
    get:
      tags:
        - cart
      summary: Get Carts by User ID
      parameters:
        - name: user_id
          in: query
          description: user_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    format: int
                    example: 200
                  message:
                    type: string
                    format: string
                    example: "Ok"
                  data:
                    type: array
                    items:
                      $ref:  '#/components/schemas/Cart'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    post:
      tags:
        - cart
      summary: Insert Multiple Cart
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CartRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    format: int
                    example: 200
                  message:
                    type: string
                    format: string
                    example: "Ok"
                  data:
                    type: array
                    items:
                      $ref:  '#/components/schemas/Cart'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    delete:
      tags:
        - cart
      summary: Delete Cart by User ID
      parameters:
        - name: cart_id
          in: query
          description: cart_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref:  '#/components/schemas/OkDelete'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /v1/PLdKLnBBRbg:
    get:
      tags:
        - cart
      summary: Get Carts by User ID
      parameters:
        - name: Authorization
          in: header
          description: Bearer Token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    format: int
                    example: 200
                  message:
                    type: string
                    format: string
                    example: "Ok"
                  data:
                    type: array
                    items:
                      $ref:  '#/components/schemas/Cart'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    post:
      tags:
        - cart
      summary: Insert Multiple Cart
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CartRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    format: int
                    example: 200
                  message:
                    type: string
                    format: string
                    example: "Ok"
                  data:
                    type: array
                    items:
                      $ref:  '#/components/schemas/Cart'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    delete:
      tags:
        - cart
      summary: Delete Cart by User ID
      parameters:
        - name: cart_id
          in: query
          description: cart_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref:  '#/components/schemas/OkDelete'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /auth/login:
    post:
      tags:
        - auth
      summary: User Login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    format: int
                    example: 200
                  message:
                    type: string
                    format: string
                    example: "Created"
                  data:
                    type: array
                    items:
                      properties:
                        access_token:
                          type: string
                          format: string
                          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiNyIsInVzZXJfcm9sZSI6InVzZXIiLCJpc3MiOiJlY29tbWVyY2UiLCJleHAiOjE2ODU2MDc2OTgsIm5iZiI6MTY4NTUyMTI5OCwiaWF0IjoxNjg1NTIxMjk4fQ.OVfYs4l0anxgRDdHYVZHzgRsSboeqKqCnmRolB3GL0c
                        refresh_token:
                          type: string
                          format: string
                          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiNyIsInVzZXJfcm9sZSI6InVzZXIiLCJpc3MiOiJlY29tbWVyY2UiLCJleHAiOjE2ODYxMjYwOTgsIm5iZiI6MTY4NTUyMTI5OCwiaWF0IjoxNjg1NTIxMjk4fQ.IfjZZj8OkzUJfiv0ktcZQNyIhiQyXfDUeA7dYHG7k2I
                        user:
                          type: array
                          items:
                            properties:
                              age:
                                type: string
                                format: string
                                example: 
                              created_at:
                                type: string
                                format: string
                                example: 2023-05-31T15:21:14.580489+07:00
                              email:
                                type: string
                                format: string
                                example: test@gmail.com
                              id:
                                type: integer
                                format: integer
                                example: 7
                              full_name:
                                type: string
                                format: string
                                example: adli
                              image_url:
                                type: string
                                format: string
                                example: www.phincon.com
                              role:
                                type: string
                                format: string
                                example: user
                              updated_at:
                                type: string
                                format: string
                                example: 2023-05-31T15:21:14.580489+07:00
                              user_setting:
                                type: array
                                items:
                                  properties:                                   
                                    created_at:
                                      type: string
                                      format: string
                                      example: 2023-05-31T15:21:14.580489+07:00
                                    dark_mode:
                                      type: string
                                      format: string
                                      example: null
                                    id:
                                      type: integer
                                      format: integer
                                      example: 1
                                    language:
                                      type: array
                                      items:
                                        properties:                          
                                          created_at:
                                            type: string
                                            format: string
                                            example: 2023-05-31T15:21:14.580489+07:00
                                          id:
                                            type: integer
                                            format: integer
                                            example: 1
                                          name:
                                            type: string
                                            format: string
                                          updated_at:
                                            type: string
                                            format: string
                                            example: 2023-05-31T15:21:14.580489+07:00
                              username:
                                type: string
                                format: string
                                example: adli
                              
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /auth/register:
    post:
      tags:
        - auth
      summary: User Register
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    format: int
                    example: 200
                  message:
                    type: string
                    format: string
                    example: "Created"
                  data:
                    type: integer
                    format: integer
                    example: 7
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /v1/VIYMjjr4WBg:
    post:
      tags:
        - auth
      summary: User Login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    format: int
                    example: 200
                  message:
                    type: string
                    format: string
                    example: "Created"
                  data:
                    type: array
                    items:
                      properties:
                        access_token:
                          type: string
                          format: string
                          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiNyIsInVzZXJfcm9sZSI6InVzZXIiLCJpc3MiOiJlY29tbWVyY2UiLCJleHAiOjE2ODU2MDc2OTgsIm5iZiI6MTY4NTUyMTI5OCwiaWF0IjoxNjg1NTIxMjk4fQ.OVfYs4l0anxgRDdHYVZHzgRsSboeqKqCnmRolB3GL0c
                        refresh_token:
                          type: string
                          format: string
                          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiNyIsInVzZXJfcm9sZSI6InVzZXIiLCJpc3MiOiJlY29tbWVyY2UiLCJleHAiOjE2ODYxMjYwOTgsIm5iZiI6MTY4NTUyMTI5OCwiaWF0IjoxNjg1NTIxMjk4fQ.IfjZZj8OkzUJfiv0ktcZQNyIhiQyXfDUeA7dYHG7k2I
                        user:
                          type: array
                          items:
                            properties:
                              age:
                                type: string
                                format: string
                                example: 
                              created_at:
                                type: string
                                format: string
                                example: 2023-05-31T15:21:14.580489+07:00
                              email:
                                type: string
                                format: string
                                example: test@gmail.com
                              id:
                                type: integer
                                format: integer
                                example: 7
                              full_name:
                                type: string
                                format: string
                                example: adli
                              image_url:
                                type: string
                                format: string
                                example: www.phincon.com
                              role:
                                type: string
                                format: string
                                example: user
                              updated_at:
                                type: string
                                format: string
                                example: 2023-05-31T15:21:14.580489+07:00
                              user_setting:
                                type: array
                                items:
                                  properties:                                   
                                    created_at:
                                      type: string
                                      format: string
                                      example: 2023-05-31T15:21:14.580489+07:00
                                    dark_mode:
                                      type: string
                                      format: string
                                      example: null
                                    id:
                                      type: integer
                                      format: integer
                                      example: 1
                                    language:
                                      type: array
                                      items:
                                        properties:                          
                                          created_at:
                                            type: string
                                            format: string
                                            example: 2023-05-31T15:21:14.580489+07:00
                                          id:
                                            type: integer
                                            format: integer
                                            example: 1
                                          name:
                                            type: string
                                            format: string
                                          updated_at:
                                            type: string
                                            format: string
                                            example: 2023-05-31T15:21:14.580489+07:00
                              username:
                                type: string
                                format: string
                                example: adli
                              
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /v1/HTnbxUvQ2IE:
    post:
      tags:
        - auth
      summary: User Register
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    format: int
                    example: 200
                  message:
                    type: string
                    format: string
                    example: "Created"
                  data:
                    type: integer
                    format: integer
                    example: 7
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /products:
    get:
      tags:
        - product
      summary: Get Products
      parameters:
        - name: Brand
          in: query
          description: Filter by brand
          required: false
          schema:
            type: string
        - name: Category
          in: query
          description: Filter by category
          required: false
          schema:
            type: string
        - name: Name
          in: query
          description: Filter by name
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductGet'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  
  /admin/products:
    post:
      tags:
        - cms
      summary: Insert New Product
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductGet'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    patch:
      tags:
        - cms
      summary: Update Existing Product Information
      parameters:
        - name: user_id
          in: query
          description: user_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductUpdate'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    delete:
      tags:
        - cms
      summary: Delete Product by id
      parameters:
        - name: ProductID
          in: query
          description: Delete by product id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRespon'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /products/details:
    get:
      tags:
        - product
      summary: Get product detail by product ID
      parameters:
        - name: productID
          in: query
          description: product ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  
  /v1/EgJUGzdb5xZ:
    get:
      tags:
        - product
      summary: Get Products
      parameters:
        - name: Brand
          in: query
          description: Filter by brand
          required: false
          schema:
            type: string
        - name: Category
          in: query
          description: Filter by category
          required: false
          schema:
            type: string
        - name: Name
          in: query
          description: Filter by name
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductGet'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /v1/PH5SXgIOCem:
    get:
      tags:
        - product
      summary: Get product detail by product ID
      parameters:
        - name: productID
          in: query
          description: product ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'


  /profiles:
    get:
      tags:
        - user
      summary: Get Profile Detail By User ID
      parameters:
        - name: userID
          in: query
          description: User ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    patch:
      tags:
        - user
      summary: Update User Profile By User ID
      parameters:
        - name: userID
          in: query
          description: User ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  
  /v1/Q6koThB77Rb:
    get:
      tags:
        - user
      summary: Get Profile Detail By User ID
      parameters:
        - name: userID
          in: query
          description: User ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    patch:
      tags:
        - user
      summary: Update User Profile By User ID
      parameters:
        - name: userID
          in: query
          description: User ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /admin/shipping:
      get:
        tags:
          - cms
        summary: Get list shipping order
        responses:
          '200':
            description: Ok
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ShippingGet'
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BadRequest'
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InternalServerError'
      post:
        tags:
          - cms
        summary: Creeate new shipping orrder
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShippingRequest'
        responses:
          '200':
              description: Ok
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/ShippingGet'
          '400':
              description: Bad Request
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/BadRequest'
          '500':
              description: Internal Server Error
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/InternalServerError'
      delete:
          tags:
            - cms
          summary: Delete shipping orrder
          parameters:
            - name: shipping_id
              in: query
              description: Shipping ID
              required: true
              schema:
                  type: string
          responses:
            '200':
                description: Ok
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/ShippingGet'
            '400':
                description: Bad Request
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/BadRequest'
            '500':
                description: Internal Server Error
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/InternalServerError'

  /orders:
    get:
      tags:
        - order
      summary: Get list orders by user ID
      parameters:
        - name: user_id
          in: query
          description: User ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    post:
      tags:
        - order
      summary: Insert new order
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderCreate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /orders/stores:
    get:
      tags:
        - order
      summary: Get list orders by store ID
      parameters:
        - name: store_id
          in: query
          description: Store ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersByStore'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /orders/details:
    get:
      tags:
        - order
      summary: Get orders detail by user ID by order ID
      parameters:
        - name: userID
          in: query
          description: User ID
          required: true
          schema:
            type: string
        - name: order number
          in: query
          description: order number
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDetail'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /v1/QwFIk3OhORW:
    get:
      tags:
        - order
      summary: Get list orders by user ID
      parameters:
        - name: userID
          in: query
          description: User ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    post:
      tags:
        - order
      summary: Insert new order
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderCreate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  
  /v1/JaK5dI4I2rZ:
    get:
      tags:
        - order
      summary: Get list orders by store ID
      parameters:
        - name: store_id
          in: query
          description: Store ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersByStore'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /v1/HuEWzeif1aB:
    get:
      tags:
        - order
      summary: Get orders detail by user ID by order ID
      parameters:
        - name: userID
          in: query
          description: User ID
          required: true
          schema:
            type: string
        - name: order number
          in: query
          description: order number
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDetail'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /admin/orders:
    patch:
      tags:
        - cms
      summary: Update Customer Orders by order number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderUpdate'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderCreate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /payments:
    get:
      tags:
        - payment
      summary: Get Payment Detail in Midtrans
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    format: int
                    example: 200
                  message:
                    type: string
                    format: string
                    example: "Ok"
                  data:
                    type: array
                    items:
                      $ref:  '#/components/schemas/MidtransCheckPaymentResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    post:
      tags:
        - payment
      summary: Insert Payment to Midtrans
      requestBody:
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/MidtransPaymentRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    format: int
                    example: 200
                  message:
                    type: string
                    format: string
                    example: "Ok"
                  data:
                    type: array
                    items:
                      $ref:  '#/components/schemas/MidtransInsertPaymentResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /v1/SFoRY4WeD2B:
    get:
      tags:
        - payment
      summary: Get Payment Detail in Midtrans
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    format: int
                    example: 200
                  message:
                    type: string
                    format: string
                    example: "Ok"
                  data:
                    type: array
                    items:
                      $ref:  '#/components/schemas/MidtransCheckPaymentResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    post:
      tags:
        - payment
      summary: Insert Payment to Midtrans
      requestBody:
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/MidtransPaymentRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    format: int
                    example: 200
                  message:
                    type: string
                    format: string
                    example: "Ok"
                  data:
                    type: array
                    items:
                      $ref:  '#/components/schemas/MidtransInsertPaymentResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /splashscreens:
    get:
      tags:
        - splash screen
      summary: Get Splash Screen
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    format: int
                    example: 200
                  message:
                    type: string
                    format: string
                    example: "Ok"
                  data:
                    type: array
                    items:
                      $ref:  '#/components/schemas/SplashScreen'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    post:
      tags:
        - splash screen
      summary: Insert Multiple Splash Screen
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items: 
                $ref: '#/components/schemas/SplashScreenRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    format: int
                    example: 200
                  message:
                    type: string
                    format: string
                    example: "Ok"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/SplashScreen'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    delete:
      tags:
        - splash screen
      summary: Delete Splash Screen by ID
      parameters:
        - name: splash_id
          in: query
          description: splash_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref:  '#/components/schemas/OkDelete'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /v1/Q0S4sLEB1IT:
    get:
      tags:
        - splash screen
      summary: Get Splash Screen
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    format: int
                    example: 200
                  message:
                    type: string
                    format: string
                    example: "Ok"
                  data:
                    type: array
                    items:
                      $ref:  '#/components/schemas/SplashScreen'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    post:
      tags:
        - splash screen
      summary: Insert Multiple Splash Screen
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items: 
                $ref: '#/components/schemas/SplashScreenRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    format: int
                    example: 200
                  message:
                    type: string
                    format: string
                    example: "Ok"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/SplashScreen'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    delete:
      tags:
        - splash screen
      summary: Delete Splash Screen by ID
      parameters:
        - name: splash_id
          in: query
          description: splash_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref:  '#/components/schemas/OkDelete'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /stores:
    get:
      tags:
        - store
      summary: Get All Store
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    format: int
                    example: 200
                  message:
                    type: string
                    format: string
                    example: "Ok"
                  data:
                    type: array
                    items:
                      $ref:  '#/components/schemas/Store'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    post:
      tags:
        - store
      summary: Insert Multiple Store Data
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items: 
                $ref: '#/components/schemas/StoreRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    format: int
                    example: 200
                  message:
                    type: string
                    format: string
                    example: "Ok"
                  data:
                    type: array
                    items:
                      $ref:  '#/components/schemas/Store'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    delete:
      tags:
        - store
      summary: Delete Store by ID
      parameters:
        - name: store_id
          in: query
          description: store_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkDelete'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  
  /v1/PxtQZh61iap:
    get:
      tags:
        - store
      summary: Get All Store
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    format: int
                    example: 200
                  message:
                    type: string
                    format: string
                    example: "Ok"
                  data:
                    type: array
                    items:
                      $ref:  '#/components/schemas/Store'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    post:
      tags:
        - store
      summary: Insert Multiple Store Data
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items: 
                $ref: '#/components/schemas/StoreRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    format: int
                    example: 200
                  message:
                    type: string
                    format: string
                    example: "Ok"
                  data:
                    type: array
                    items:
                      $ref:  '#/components/schemas/Store'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    delete:
      tags:
        - store
      summary: Delete Store by ID
      parameters:
        - name: store_id
          in: query
          description: store_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkDelete'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /reviews:
    get:
      tags:
        - review
      summary: Get review By Product ID
      parameters:
        - name: product_id
          in: query
          description: product_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    format: int
                    example: 200
                  message:
                    type: string
                    format: string
                    example: "Ok"
                  data:
                    type: array
                    items:
                      $ref:  '#/components/schemas/OkDelete'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    post:
      tags:
        - review
      summary: Insert Multiple Review by Product ID
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ReviewRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    format: int
                    example: 200
                  message:
                    type: string
                    format: string
                    example: "Ok"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Review'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    delete:
      tags:
        - review
      summary: Delete Review by ID
      parameters:
        - name: review_id
          in: query
          description: review_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkDelete'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /V1/DS3EFeutzg5:
    get:
      tags:
        - review
      summary: Get review By Product ID
      parameters:
        - name: product_id
          in: query
          description: product_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    format: int
                    example: 200
                  message:
                    type: string
                    format: string
                    example: "Ok"
                  data:
                    type: array
                    items:
                      $ref:  '#/components/schemas/OkDelete'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    post:
      tags:
        - review
      summary: Insert Multiple Review by Product ID
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ReviewRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    format: int
                    example: 200
                  message:
                    type: string
                    format: string
                    example: "Ok"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Review'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    delete:
      tags:
        - review
      summary: Delete Review by ID
      parameters:
        - name: review_id
          in: query
          description: review_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkDelete'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /voucher:
    get:
      tags:
        - voucher
      summary: Get Voucher
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoucherGet'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /admin/voucher:
    post:
      tags:
        - cms
      summary: Insert New Voucher
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoucherRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoucherGet'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    delete:
      tags:
        - cms
      summary: Delete Voucher
      parameters:
        - name: VoucherID
          in: query
          description: delete by voucher id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRespon'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /v1/Fhn92ztE9Ft:
    post:
      tags:
        - cms
      summary: Insert New Product
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductGet'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    patch:
      tags:
        - cms
      summary: Update Existing Product Information
      parameters:
        - name: user_id
          in: query
          description: user_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductUpdate'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    delete:
      tags:
        - cms
      summary: Delete Product by id
      parameters:
        - name: ProductID
          in: query
          description: Delete by product id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRespon'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /v1/Qn5kXls3C3j:
      get:
        tags:
          - cms
        summary: Get list shipping order
        responses:
          '200':
            description: Ok
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ShippingGet'
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BadRequest'
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Unauthorized'
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InternalServerError'
      post:
        tags:
          - cms
        summary: Creeate new shipping orrder
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShippingRequest'
        responses:
          '200':
              description: Ok
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/ShippingGet'
          '400':
              description: Bad Request
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/BadRequest'
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Unauthorized'
          '500':
              description: Internal Server Error
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/InternalServerError'
      delete:
          tags:
            - cms
          summary: Delete shipping orrder
          parameters:
            - name: shipping_id
              in: query
              description: Shipping ID
              required: true
              schema:
                  type: string
          responses:
            '200':
                description: Ok
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/ShippingGet'
            '400':
                description: Bad Request
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/BadRequest'
            '401':
              description: Unauthorized
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/Unauthorized'
            '500':
                description: Internal Server Error
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/InternalServerError'
  /v1/MwlSWpPmVEs:
    patch:
      tags:
        - cms
      summary: Update Customer Orders by order number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderUpdate'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderCreate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /v1/DhNMctMv1Ql:
    post:
      tags:
        - cms
      summary: Insert New Voucher
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoucherRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoucherGet'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    delete:
      tags:
        - cms
      summary: Delete Voucher
      parameters:
        - name: VoucherID
          in: query
          description: delete by voucher id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRespon'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /voucher/details:
    get:
      tags:
        - voucher
      summary: Get Voucher Details By code Voucher
      parameters:
        - name: code
          in: query
          description: code voucher
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Voucher'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /V1/DhNMctMv1Ql:
    get:
      tags:
        - voucher
      summary: Get Voucher
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoucherGet'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /v1/GRgffPBuLxu:
    get:
      tags:
        - voucher
      summary: Get Voucher Details By code Voucher
      parameters:
        - name: code
          in: query
          description: code voucher
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Voucher'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /wishlists:
    get:
      tags:
        - wishlist
      summary: Get Wishlists by User ID
      parameters:
        - name: user-id
          in: header
          description: user-id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    format: int
                    example: 200
                  message:
                    type: string
                    format: string
                    example: "Ok"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Cart'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    post:
      tags:
        - wishlist
      summary: Insert Multiple Wishlist
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/WishlistRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    format: int
                    example: 200
                  message:
                    type: string
                    format: string
                    example: "Ok"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Cart'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    delete:
      tags:
        - wishlist
      summary: Delete Wishlist by User ID
      parameters:
        - name: wishlist_id
          in: query
          description: wishlist_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkDelete'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /v1/CUbICN8VgNk:
    get:
      tags:
        - wishlist
      summary: Get Wishlists by User ID
      parameters:
        - name: Authorization
          in: header
          description: Bearer Token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    format: int
                    example: 200
                  message:
                    type: string
                    format: string
                    example: "Ok"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Cart'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    post:
      tags:
        - wishlist
      summary: Insert Multiple Wishlist
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/WishlistRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    format: int
                    example: 200
                  message:
                    type: string
                    format: string
                    example: "Ok"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Cart'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    delete:
      tags:
        - wishlist
      summary: Delete Wishlist by User ID
      parameters:
        - name: wishlist_id
          in: query
          description: wishlist_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkDelete'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

components:
  schemas:
    OkDelete:
      type: object
      properties:
        status:
          type: integer
          format: int
          example: 200
        message:
          type: string
          format: string
          example: "Ok"
        data:
          example: null
    BadRequest:
      type: object
      properties:
        status:
          type: integer
          format: int
          example: 400
        message:
          type: string
          format: string
          example: "Bad Request"
        error:
          type: string
          format: string
          example: "some error"
    Unauthorized:
      type: object
      properties:
        status:
          type: integer
          format: int
          example: 401
        message:
          type: string
          format: string
          example: "Unautorized"
        error:
          type: string
          format: string
          example: "some error"
    NotFound:
      type: object
      properties:
        status:
          type: integer
          format: int
          example: 404
        message:
          type: string
          format: string
          example: "Unautorized"
        error:
          type: string
          format: string
          example: "some error"
    InternalServerError:
      type: object
      properties:
        status:
          type: integer
          format: int
          example: 500
        message:
          type: string
          format: string
          example: "Internal Server Error"
        error:
          type: string
          format: string
          example: "some error"
    RegisterRequest:
      type: object
      properties:
        username:
          type: string
          format: string
          example: adli
        email:
          type: integer
          format: string
          example: ghozian@test11.com
        password:
          type: string
          format: string
          example: 1221
    Login:
      type: object
      properties:
        email:
          type: integer
          format: string
          example: ghozian@test11.com
        password:
          type: string
          format: string
          example: 1221
    VoucherGet:
      type: array
      items:
        $ref: '#/components/schemas/Voucher'
    Voucher:
      type: object
      properties:
        id:
          type: integer
          format: int
          example: 1
        store_id: 
          type: integer
          format: int
          example: 1
        product_id:
          type: integer
          format: int
          example: 1
        category_id: 
          type: integer
          format: int
          example: 1
        discount_value: 
          type: number
          format: float
          example: 0.23
        name:
          type: string
          format: varchar(255)
          example: ramadhan sale 
        code:
          type: string
          format: varchar(255)
          example: oyAKQwvDuL 
        start_date: 
          type: string
          format: date-time
          example: 2023-05-21T17:30:00+07:00
        end_date:
          type: string
          format: date-time
          example: 2023-05-21T17:30:00+07:00
        created_at:
          type: string
          format: date-time
          example: 2023-06-02T15:03:16.215547+07:00
        updated_at:
          type: string
          format: date-time
          example: 2023-06-02T15:03:16.215547+07:00 
    VoucherRequest:
      type: array
      items:
        type: object
        properties:
          store_id: 
            type: integer
            format: int
            example: 1
          product_id:
            type: integer
            format: int
            example: 1
          category_id: 
            type: integer
            format: int
            example: 1
          discount_value: 
            type: number
            format: float
            example: 0.23
          name:
            type: string
            format: varchar(255)
            example: ramadhan sale 
          start_date: 
            type: string
            format: date-time
            example: 2023-05-21T17:30:00+07:00
          end_date:
            type: string
            format: date-time
            example: 2023-05-21T17:30:00+07:00
    DeleteRespon:
      type: object
      properties:
        Status:
          type: integer
          format: int
          example: 200
        Message:
          type: string
          format: varchar(255)
          example: Ok
        Data:
          type: integer
          format: int
          example: 44
    ShippingGet:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
            format: int
            example: 1 
          name:
            type: string
            format: varchar(255)
            example: J&T
          created_at: 
            type: string
            format: varchar(255)
            example: 2023-05-30T10:18:10.294756+07:00
          updated_at: 
            type: string
            format: varchar(255)
            example: 2023-05-30T10:18:10.294756+07:00
    ShippingRequest:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
              format: varchar(255)
              example: J&T
    Address:
      type: object
      properties:
        id:
          type: integer
          format: int
          example: 1
        user_id:
          type: integer
          format: int
          example: 1
        street:
          type: string
          format: string
          example: Menteng Street
        city:
          type: string
          format: string
          example: South Jakarta
        state:
          type: string
          format: string
          example: Jakarta
        country:
          type: string
          format: string
          example: Indonesia
        zipcode:
          type: integer
          format: int
          example: 55555
        phone_number:
          type: integer
          format: int
          example: 088243379274
    Product:
      type: object
      properties:
        id:
          type: integer
          format: int
          example: 1
        store_id:
          type: integer
          format: int
          example: 1
        category_id:
          type: integer
          format: int
          example: 1
        size_id:
          type: integer
          format: int
          example: 1
        color_id:
          type: integer
          format: int
          example: 1
        name: 
          type: string
          format: varchar(255)
          example: nike watch
        brand:
          type: string
          format: varchar(255)
          example: nike
        subtitle:
          type: string
          format: varchar(255)
          example: jam olahraga
        description:
          type: string
          format: varchar(255)
          example: jam tangan untuk berolahraga
        unit_price:
          type: number
          format: float
          example: 3500000
        status: 
          type: boolean
          format: boolean
          example: true
        stock:
          type: integer
          format: int
          example: 10 
        sku:
          type: string
          format: varchar(255)
          example: ksakjudI 
        weight:
          type: number
          format: float64
          example: 2.4
        created_at: 
          type: string
          format: varchar(255)
          example: 2023-05-30T10:18:10.294756+07:00
        updated_at: 
          type: string
          format: varchar(255)
          example: 2023-05-30T10:18:10.294756+07:00
    ProductRequest:
      type: array
      items:
        type: object
        properties:
          store_id:
            type: integer
            format: int
            example: 1
          category_id:
            type: integer
            format: int
            example: 1
          size_id:
            type: integer
            format: int
            example: 1
          color_id:
            type: integer
            format: int
            example: 1
          name: 
            type: string
            format: varchar(255)
            example: nike watch
          brand:
            type: string
            format: varchar(255)
            example: nike
          subtitle:
            type: string
            format: varchar(255)
            example: jam olahraga
          description:
            type: string
            format: varchar(255)
            example: jam tangan untuk berolahraga
          unit_price:
            type: number
            format: float
            example: 3500000
          stock:
            type: integer
            format: int
            example: 10  
          weight:
            type: number
            format: float64
            example: 2.4
    ProductUpdate:
        type: object
        properties:
          store_id:
            type: integer
            format: int
            example: 1
          category_id:
            type: integer
            format: int
            example: 1
          size_id:
            type: integer
            format: int
            example: 1
          color_id:
            type: integer
            format: int
            example: 1
          name: 
            type: string
            format: varchar(255)
            example: nike watch
          brand:
            type: string
            format: varchar(255)
            example: nike
          subtitle:
            type: string
            format: varchar(255)
            example: jam olahraga
          description:
            type: string
            format: varchar(255)
            example: jam tangan untuk berolahraga
          status:
            type: string
            format: boolean
            example: true
          unit_price:
            type: number
            format: float
            example: 3500000
          stock:
            type: integer
            format: int
            example: 10  
          weight:
            type: number
            format: float64
            example: 2.4
    ProductGet:
      type: array
      items: 
        $ref: '#/components/schemas/Product'
    AddressRequest:
      type: object
      properties:
        user_id:
          type: integer
          format: int
          example: 1
        street:
          type: string
          format: string
          example: Menteng Street
        city:
          type: string
          format: string
          example: South Jakarta
        state:
          type: string
          format: string
          example: Jakarta
        country:
          type: string
          format: string
          example: Indonesia
        zipcode:
          type: integer
          format: string
          example: 55555
        phone_number:
          type: integer
          format: int
          example: 088243379274
    Cart:
      type: object
      properties:
        id:
          type: integer
          format: int
          example: 1
        user_id:
          type: integer
          format: int
          example: 1
        product_id:
          type: integer
          format: int
          example: 1
        quantity:
          type: integer
          format: int
          example: 5
    CartRequest:
      type: object
      properties:
        user_id:
          type: integer
          format: int
          example: 1
        product_id:
          type: integer
          format: int
          example: 1
        quantity:
          type: integer
          format: int
          example: 5
    MidtransCheckPaymentResponse:
      type: object
      properties:
        transaction_time:
          type: string
          format: string
          example: 2023-05-29 15:59:56
        gross_amount:
          type: string
          format: string
          example: 150000
        currency:
          type: string
          format: string
          example: IDR
        order_id:
          type: string
          format: string
          example: 8
        payment_type:
          type: string
          format: string
          example: qris
        transaction_id:
          type: string
          format: string
          example: 008c42fe-2e4c-487f-9678-db73f8f094be
        transaction_status:
          type: string
          format: string
          example: status
        settlement_Time:
          type: string
          format: string
          example: 2023-05-29 16:59:56
        status_Message:
          type: string
          format: string
          example: Success, transaction is found
        acquirer:
          type: string
          format: string
          example: gopay
        metadata:
          type: object
          properties:
            user_id:
              type: string
              format: string
              example: 2
    MidtransPaymentRequest:
      type: object
      properties:
        id:
          type: integer
          format: int
          example: 1
        user_id:
          type: integer
          format: int
          example: 1
        order_id:
          type: integer
          format: int
          example: 1
        total_payment:
          type: number
          format: float64
          example: 199999.99
    MidtransInsertPaymentResponse:
      type: object
      properties:
        redirect_url:
          type: string
          format: string
          example: https://app.sandbox.midtrans.com/snap/v3/redirection/bdb43983-20bb-4b34-a329-ca42e4c3a4b6
        token:
          type: string
          format: string
          example: bdb43983-20bb-4b34-a329-ca42e4c3a4b6
    Review:
      type: object
      properties:
        id:
          type: integer
          format: int
          example: 1
        user_id:
          type: integer
          format: int
          example: 1
        product_id:
          type: integer
          format: int
          example: 1
        rating_id:
          type: integer
          format: int
          example: 1
        review_text:
          type: string
          format: string
          example: good quality
    ReviewRequest:
      type: object
      properties:
        user_id:
          type: integer
          format: int
          example: 1
        product_id:
          type: integer
          format: int
          example: 1
        rating_id:
          type: integer
          format: int
          example: 1
        review_text:
          type: string
          format: string
          example: good quality
    SplashScreen:
      type: object
      properties:
        id:
          type: integer
          format: int
          example: 1
        image_url:
          type: string
          format: string
          example: https://unsplash.com/photos/CEx86maLUSc
    SplashScreenRequest:
      type: object
      properties:
        image_url:
          type: string
          format: string
          example: https://unsplash.com/photos/CEx86maLUSc
    Store:
      type: object
      properties:
        id:
          type: integer
          format: int
          example: 1
        address_id:
          type: integer
          format: int
          example: 1
        name:
          type: string
          format: string
          example: Branch Menteng
        description:
          type: string
          format: string
          example: Fashion Store
        image_url:
          type: string
          format: string
          example: https://phincon.com/
    StoreRequest:
      type: object
      properties:
        address_id:
          type: integer
          format: int
          example: 1
        name:
          type: string
          format: string
          example: Branch Menteng
        description:
          type: string
          format: string
          example: Fashion Store
        image_url:
          type: string
          format: string
          example: https://phincon.com/
    Wishlist:
      type: object
      properties:
        id:
          type: integer
          format: int
          example: 1
        user_id:
          type: integer
          format: int
          example: 1
        product_id:
          type: integer
          format: int
          example: 1
    WishlistRequest:
      type: object
      properties:
        user_id:
          type: integer
          format: int
          example: 1
        product_id:
          type: integer
          format: int
          example: 1
    OrderRequest:
      type: object
      properties:
        user_id:
          type: integer
          format: int
          example: 1
        shipping_id:
          type: integer
          format: int
          example: 3 
        total_price:
          type: number
          format: float
          example: 54000 
        order_items:
          $ref: '#/components/schemas/OrderItems'
    OrderUpdate:
      type: object
      properties:
        order_number:
          type: string
          format: varchar(255)
          example: 5ResPEGZHZ
        Status:
          type: string
          format: float
          example: true
    OrderItems:
      type: array
      items:
        type: object
        properties:
          product_id:
            type: integer
            format: int
            example: 1
          quantity:
            type: integer
            format: int
            example: 10
          total_price:
            type: integer
            format: int
            example: 15000
    OrderDetail:
      type: object
      properties:
        id:
          type: integer
          format: int
          example: 29 
        user_id:
          type: integer
          format: int
          example: 2
        shipping_id:
          type: integer
          format: int
          example: 3 
        total_price:
          type: integer
          format: int
          example: 54000 
        status:
          type: boolean
          format: boolean
          example: false
        order_number: 
          type: string
          format: varchar(255)
          example: mHAq33k3bq 
        created_at: 
          type: string
          format: date-time
          example: 2023-06-01T12:38:50.077582+07:00 
        updated_at: 
          type: string
          format: date-time
          example: 2023-06-01T12:38:50.077582+07:00 
        OrderItems:
          $ref: '#/components/schemas/OrderItems'
    Order :
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
            format: int
            example: 29 
          user_id:
            type: integer
            format: int
            example: 2
          shipping_id:
            type: integer
            format: int
            example: 3 
          total_price:
            type: integer
            format: int
            example: 54000 
          status:
            type: boolean
            format: boolean
            example: false
          order_number: 
            type: string
            format: varchar(255)
            example: mHAq33k3bq 
          created_at: 
            type: string
            format: date-time
            example: 2023-06-01T12:38:50.077582+07:00 
          updated_at: 
            type: string
            format: date-time
            example: 2023-06-01T12:38:50.077582+07:00
    OrdersByStore :
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
            format: int
            example: 29 
          user_id:
            type: integer
            format: int
            example: 2
          shipping_id:
            type: integer
            format: int
            example: 3
          status:
            type: boolean
            format: boolean
            example: false
          order_number: 
            type: string
            format: varchar(255)
            example: mHAq33k3bq 
          created_at: 
            type: string
            format: date-time
            example: 2023-06-01T12:38:50.077582+07:00 
          updated_at: 
            type: string
            format: date-time
            example: 2023-06-01T12:38:50.077582+07:00
          store_id:
            type: integer
            format: int
            example: 1
          quantity:
            type: integer
            format: int
            example: 5
          total_price:
            type: integer
            format: int
            example: 100000
    OrderCreate :
        type: object
        properties:
          id:
            type: integer
            format: int
            example: 29 
          user_id:
            type: integer
            format: int
            example: 2
          shipping_id:
            type: integer
            format: int
            example: 3 
          total_price:
            type: integer
            format: int
            example: 54000 
          status:
            type: boolean
            format: boolean
            example: false
          order_number: 
            type: string
            format: varchar(255)
            example: mHAq33k3bq 
          created_at: 
            type: string
            format: date-time
            example: 2023-06-01T12:38:50.077582+07:00 
          updated_at: 
            type: string
            format: date-time
            example: 2023-06-01T12:38:50.077582+07:00
    Customer:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 100000
        username:
          type: string
          example: fehguy
        address:
          type: array
          xml:
            name: addresses
            wrapped: true
          items:
            $ref: '#/components/schemas/Address'
      xml:
        name: customer
    Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Dogs
      xml:
        name: category
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        username:
          type: string
          example: theUser
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: James
        email:
          type: string
          example: john@email.com
        password:
          type: string
          example: '12345'
        phone:
          type: string
          example: '12345'
        userStatus:
          type: integer
          description: User Status
          format: int32
          example: 1
      xml:
        name: user
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: tag
    Pet:
      required:
        - name
        - photoUrls
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: doggie
        category:
          $ref: '#/components/schemas/Category'
        photoUrls:
          type: array
          xml:
            wrapped: true
          items:
            type: string
            xml:
              name: photoUrl
        tags:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/Tag'
        status:
          type: string
          description: pet status in the store
          enum:
            - available
            - pending
            - sold
      xml:
        name: pet
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      xml:
        name: '##default'
  requestBodies:
    Pet:
      description: Pet object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Pet'
        application/xml:
          schema:
            $ref: '#/components/schemas/Pet'
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'