openapi: 3.0.3
info:
  title: Swagger E-Commerce
  description: |-
    Swagger E-Commerce API Documentation
  version: 1.0.0
servers:
  - url: http://localhost:8080
tags:
  - name: address
    description: Address
  - name: auth
    description: Login and Register
  - name: cart
    description: Cart
  - name: cms
    description: Content Management System
  - name: product
    description: Product
  - name: order
    description: Order
  - name: payment
    description: Payment
  - name: review
    description: Review
  - name: store
    description: Store Management in Content Management System Web
  - name: user
    description: User Profile
  - name: voucher
    description: Voucher
  - name: wishlist
    description: Wishlist
paths:
  /address:
    get:
      tags:
        - address
      summary: Get Address by User ID
      parameters:
        - name: user_id
          in: query
          description: user_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    post:
      tags:
        - address
      summary: Insert Multiple Address
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AddressRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    delete:
      tags:
        - address
      summary: Delete Address By Address ID
      parameters:
        - name: address_id
          in: query
          description: address_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkDelete'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /carts:
    get:
      tags:
        - cart
      summary: Get Carts by User ID
      parameters:
        - name: user_id
          in: query
          description: user_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cart'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    post:
      tags:
        - cart
      summary: Insert Multiple Cart
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CartRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cart'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    delete:
      tags:
        - cart
      summary: Delete Cart by User ID
      parameters:
        - name: cart_id
          in: query
          description: cart_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkDelete'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /login:
    post:
      tags:
        - auth
      summary: test
      description: test
      operationId: test
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /login/cms:
    post:
      tags:
        - cms
      summary: test
      description: test
      operationId: test
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /register:
    post:
      tags:
        - auth
      summary: test
      description: test
      operationId: test
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /products:
    get:
      tags:
        - product
      summary: Get Products
      operationId: test
      parameters:
        - name: Arrival
          in: query
          description: Filter by arrival
          required: false
          schema:
            type: string
        - name: Brand
          in: query
          description: Filter by brand
          required: false
          schema:
            type: string
        - name: Category
          in: query
          description: Filter by category
          required: false
          schema:
            type: string
        - name: Name
          in: query
          description: Filter by name
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    post:
      tags:
        - cms
      summary: Insert New Product
      operationId: test
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    patch:
      tags:
        - cms
      summary: Update Existing Product Information
      operationId: test
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /products/details:
    get:
      tags:
        - product
      summary: Get product detail by product ID
      operationId: test
      parameters:
        - name: userID
          in: query
          description: User ID
          required: true
          schema:
            type: string
        - name: orderID
          in: query
          description: Order ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /profiles:
    get:
      tags:
        - user
      summary: Get Profile Detail By User ID
      operationId: test
      parameters:
        - name: userID
          in: query
          description: User ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    patch:
      tags:
        - user
      summary: Update User Profile By User ID
      operationId: test
      parameters:
        - name: userID
          in: query
          description: User ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /orders:
    get:
      tags:
        - order
      summary: Get list orders by user ID
      operationId: test
      parameters:
        - name: userID
          in: query
          description: User ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    post:
      tags:
        - order
      summary: Insert new order
      operationId: test
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    patch:
      tags:
        - cms
      summary: Update Customer Orders by User ID
      operationId: test
      parameters:
        - name: userID
          in: query
          description: User ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /orders/details:
    get:
      tags:
        - order
      summary: Get orders detail by user ID by order ID
      operationId: test
      parameters:
        - name: userID
          in: query
          description: User ID
          required: true
          schema:
            type: string
        - name: orderID
          in: query
          description: Order ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /payments:
    get:
      tags:
        - payment
      summary: Get Payment Detail in Midtrans
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MidtransCheckPaymentResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    post:
      tags:
        - payment
      summary: Insert Payment to Midtrans
      requestBody:
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/MidtransPaymentRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MidtransInsertPaymentResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
 
  /splashs:
    get:
      tags:
        - cms
      summary: Get Splash Screen
      operationId: test
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    post:
      tags:
        - cms
      summary: Insert New Splash Screen Data
      operationId: test
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    patch:
      tags:
        - cms
      summary: Update Spash Screen Data
      operationId: test
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  
  /stores:
    get:
      tags:
        - store
      summary: Get All Store
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Store'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    post:
      tags:
        - store
      summary: Insert Multiple Store Data
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items: 
                $ref: '#/components/schemas/StoreRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Store'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    delete:
      tags:
        - store
      summary: Delete Store by ID
      parameters:
        - name: store_id
          in: query
          description: store_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkDelete'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /reviews:
    get:
      tags:
        - review
      summary: Get review By Product ID
      parameters:
        - name: product_id
          in: query
          description: product_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OkDelete'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    post:
      tags:
        - review
      summary: Insert Multiple Review by Product ID
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ReviewRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    delete:
      tags:
        - review
      summary: Delete Review by ID
      parameters:
        - name: review_id
          in: query
          description: review_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkDelete'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'


  /vouchers:
    get:
      tags:
        - voucher
      summary: Get Voucher
      description: test
      operationId: test
      parameters:
        - name: pagination
          in: query
          description: Pagination
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Limit
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    post:
      tags:
        - cms
      summary: Insert New Voucher
      description: test
      operationId: test
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    patch:
      tags:
        - cms
      summary: Update Voucher
      description: test
      operationId: test
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /vouchers/details:
    get:
      tags:
        - voucher
      summary: Get Voucher Details By User ID
      description: test
      operationId: test
      parameters:
        - name: voucherID
          in: query
          description: Voucher ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /wishlist:
    get:
      tags:
        - wishlist
      summary: Get Wishlists by User ID
      parameters:
        - name: user_id
          in: query
          description: user_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cart'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    post:
      tags:
        - wishlist
      summary: Insert Multiple Wishlist
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/WishlistRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cart'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    delete:
      tags:
        - wishlist
      summary: Delete Wishlist by User ID
      parameters:
        - name: wishlist_id
          in: query
          description: wishlist_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkDelete'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

components:
  schemas:
    OkDelete:
      type: object
      properties:
        status:
          type: integer
          format: int
          example: 200
        message:
          type: string
          format: string
          example: "Ok"
        data:
          example: null
    BadRequest:
      type: object
      properties:
        status:
          type: integer
          format: int
          example: 400
        message:
          type: string
          format: string
          example: "Bad Request"
        error:
          type: string
          format: string
          example: "some error"
    Unauthorized:
      type: object
      properties:
        status:
          type: integer
          format: int
          example: 401
        message:
          type: string
          format: string
          example: "Unautorized"
        error:
          type: string
          format: string
          example: "not authorize"
    NotFound:
      type: object
      properties:
        status:
          type: integer
          format: int
          example: 404
        message:
          type: string
          format: string
          example: "Unautorized"
        error:
          type: string
          format: string
          example: "some error"
    InternalServerError:
      type: object
      properties:
        status:
          type: integer
          format: int
          example: 500
        message:
          type: string
          format: string
          example: "Internal Server Error"
        error:
          type: string
          format: string
          example: "some error"
    Address:
      type: object
      properties:
        id:
          type: integer
          format: int
          example: 1
        user_id:
          type: integer
          format: int
          example: 1
        street:
          type: string
          format: int
          example: Menteng Street
        city:
          type: string
          format: int
          example: South Jakarta
        state:
          type: string
          format: int
          example: Jakarta
        country:
          type: string
          format: int
          example: Indonesia
        zipcode:
          type: integer
          format: int
          example: 55555
        phone_number:
          type: integer
          format: int
          example: 088243379274
    AddressRequest:
      type: object
      properties:
        user_id:
          type: integer
          format: int
          example: 1
        street:
          type: string
          format: int
          example: Menteng Street
        city:
          type: string
          format: int
          example: South Jakarta
        state:
          type: string
          format: int
          example: Jakarta
        country:
          type: string
          format: int
          example: Indonesia
        zipcode:
          type: integer
          format: int
          example: 55555
        phone_number:
          type: integer
          format: int
          example: 088243379274
    Cart:
      type: object
      properties:
        id:
          type: integer
          format: int
          example: 1
        user_id:
          type: integer
          format: int
          example: 1
        product_id:
          type: integer
          format: int
          example: 1
        quantity:
          type: integer
          format: int
          example: 5
    CartRequest:
      type: object
      properties:
        user_id:
          type: integer
          format: int
          example: 1
        product_id:
          type: integer
          format: int
          example: 1
        quantity:
          type: integer
          format: int
          example: 5
    MidtransCheckPaymentResponse:
      type: object
      properties:
        transaction_time:
          type: string
          format: string
          example: 2023-05-29 15:59:56
        gross_amount:
          type: string
          format: string
          example: 150000
        currency:
          type: string
          format: string
          example: IDR
        order_id:
          type: string
          format: string
          example: 8
        payment_type:
          type: string
          format: string
          example: qris
        transaction_id:
          type: string
          format: string
          example: 008c42fe-2e4c-487f-9678-db73f8f094be
        transaction_status:
          type: string
          format: string
          example: status
        settlement_Time:
          type: string
          format: string
          example: 2023-05-29 16:59:56
        status_Message:
          type: string
          format: string
          example: Success, transaction is found
        acquirer:
          type: string
          format: string
          example: gopay
        metadata:
          type: object
          properties:
            user_id:
              type: string
              format: string
              example: 2
    MidtransPaymentRequest:
      type: object
      properties:
        id:
          type: integer
          format: int
          example: 1
        user_id:
          type: integer
          format: int
          example: 1
        order_id:
          type: integer
          format: int
          example: 1
        total_payment:
          type: number
          format: float64
          example: 199999.99
    MidtransInsertPaymentResponse:
      type: object
      properties:
        redirect_url:
          type: string
          format: string
          example: https://app.sandbox.midtrans.com/snap/v3/redirection/bdb43983-20bb-4b34-a329-ca42e4c3a4b6
        token:
          type: string
          format: string
          example: bdb43983-20bb-4b34-a329-ca42e4c3a4b6
    Review:
      type: object
      properties:
        id:
          type: integer
          format: int
          example: 1
        user_id:
          type: integer
          format: int
          example: 1
        product_id:
          type: integer
          format: int
          example: 1
        rating_id:
          type: integer
          format: int
          example: 1
        review_text:
          type: string
          format: string
          example: good quality
    ReviewRequest:
      type: object
      properties:
        user_id:
          type: integer
          format: int
          example: 1
        product_id:
          type: integer
          format: int
          example: 1
        rating_id:
          type: integer
          format: int
          example: 1
        review_text:
          type: string
          format: string
          example: good quality
    Store:
      type: object
      properties:
        id:
          type: integer
          format: int
          example: 1
        address_id:
          type: integer
          format: int
          example: 1
        name:
          type: string
          format: string
          example: Branch Menteng
        description:
          type: string
          format: string
          example: Fashion Store
        image_url:
          type: string
          format: string
          example: https://phincon.com/
    StoreRequest:
      type: object
      properties:
        address_id:
          type: integer
          format: int
          example: 1
        name:
          type: string
          format: string
          example: Branch Menteng
        description:
          type: string
          format: string
          example: Fashion Store
        image_url:
          type: string
          format: string
          example: https://phincon.com/
    Wishlist:
      type: object
      properties:
        id:
          type: integer
          format: int
          example: 1
        user_id:
          type: integer
          format: int
          example: 1
        product_id:
          type: integer
          format: int
          example: 1
    WishlistRequest:
      type: object
      properties:
        user_id:
          type: integer
          format: int
          example: 1
        product_id:
          type: integer
          format: int
          example: 1
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        petId:
          type: integer
          format: int64
          example: 198772
        quantity:
          type: integer
          format: int32
          example: 7
        shipDate:
          type: string
          format: date-time
        status:
          type: string
          description: Order Status
          example: approved
          enum:
            - placed
            - approved
            - delivered
        complete:
          type: boolean
      xml:
        name: order
    Customer:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 100000
        username:
          type: string
          example: fehguy
        address:
          type: array
          xml:
            name: addresses
            wrapped: true
          items:
            $ref: '#/components/schemas/Address'
      xml:
        name: customer

    Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Dogs
      xml:
        name: category
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        username:
          type: string
          example: theUser
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: James
        email:
          type: string
          example: john@email.com
        password:
          type: string
          example: '12345'
        phone:
          type: string
          example: '12345'
        userStatus:
          type: integer
          description: User Status
          format: int32
          example: 1
      xml:
        name: user
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: tag
    Pet:
      required:
        - name
        - photoUrls
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: doggie
        category:
          $ref: '#/components/schemas/Category'
        photoUrls:
          type: array
          xml:
            wrapped: true
          items:
            type: string
            xml:
              name: photoUrl
        tags:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/Tag'
        status:
          type: string
          description: pet status in the store
          enum:
            - available
            - pending
            - sold
      xml:
        name: pet
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      xml:
        name: '##default'
  requestBodies:
    Pet:
      description: Pet object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Pet'
        application/xml:
          schema:
            $ref: '#/components/schemas/Pet'
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://petstore3.swagger.io/oauth/authorize
          scopes:
            write:pets: modify pets in your account
            read:pets: read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header