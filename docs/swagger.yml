openapi: 3.0.3
info:
  title: Swagger E-Commerce
  description: |-
    Swagger E-Commerce API Documentation
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: http://localhost:5000
tags:
  - name: auth
    description: Login and Register
  - name: cart
    description: cart
  - name: cms
    description: Content Management System
  - name: product
    description: Product Management
  - name: order
    description: Order
  - name: payment
    description: Payment
  - name: review
    description: review
  - name: user
    description: User Profile Management
  - name: voucher
    description: Voucher Management
  - name: wishlist
    description: Wishtlist
paths:
  /carts:
    get:
      tags:
        - cart
      summary: Get Carts by User ID
      operationId: test
      parameters:
        - name: voucherID
          in: query
          description: Voucher ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
        '400':
          description: Bad Request
        '401':
          description: Not Authorized
        '500':
          description: Internal Server Error
    post:
      tags:
        - cart
      summary: Insert Item in Cart by User ID
      operationId: test
      parameters:
        - name: voucherID
          in: query
          description: Voucher ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
        '400':
          description: Bad Request
        '401':
          description: Not Authorized
        '500':
          description: Internal Server Error
    delete:
      tags:
        - cart
      summary: Delete Cart by User ID
      operationId: test
      parameters:
        - name: voucherID
          in: query
          description: Voucher ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
        '400':
          description: Bad Request
        '401':
          description: Not Authorized
        '500':
          description: Internal Server Error
  /login:
    post:
      tags:
        - auth
      summary: test
      description: test
      operationId: test
      responses:
        '200':
          description: Ok
        '400':
          description: Bad Request
        '401':
          description: Not Authorized
        '500':
          description: Internal Server Error
  /login/cms:
    post:
      tags:
        - cms
      summary: test
      description: test
      operationId: test
      responses:
        '200':
          description: Ok
        '400':
          description: Bad Request
        '401':
          description: Not Authorized
        '500':
          description: Internal Server Error

  /register:
    post:
      tags:
        - auth
      summary: test
      description: test
      operationId: test
      responses:
        '200':
          description: Ok
        '400':
          description: Bad Request
        '401':
          description: Not Authorized
        '500':
          description: Internal Server Error

  /products:
    get:
      tags:
        - product
      summary: Get Products
      operationId: test
      parameters:
        - name: Arrival
          in: query
          description: Filter by arrival
          required: false
          schema:
            type: string
        - name: Brand
          in: query
          description: Filter by brand
          required: false
          schema:
            type: string
        - name: Category
          in: query
          description: Filter by category
          required: false
          schema:
            type: string
        - name: Name
          in: query
          description: Filter by name
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Ok
        '400':
          description: Bad Request
        '401':
          description: Not Authorized
        '500':
          description: Internal Server Error
    post:
      tags:
        - cms
      summary: Insert New Product
      operationId: test
      responses:
        '200':
          description: Ok
        '400':
          description: Bad Request
        '401':
          description: Not Authorized
        '500':
          description: Internal Server Error
    patch:
      tags:
        - cms
      summary: Update Existing Product Information
      operationId: test
      responses:
        '200':
          description: Ok
        '400':
          description: Bad Request
        '401':
          description: Not Authorized
        '500':
          description: Internal Server Error
  /products/details:
    get:
      tags:
        - product
      summary: Get product detail by product ID
      operationId: test
      parameters:
        - name: userID
          in: query
          description: User ID
          required: true
          schema:
            type: string
        - name: orderID
          in: query
          description: Order ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
        '400':
          description: Bad Request
        '401':
          description: Not Authorized
        '500':
          description: Internal Server Error

  /profiles:
    get:
      tags:
        - user
      summary: Get Profile Detail By User ID
      operationId: test
      parameters:
        - name: userID
          in: query
          description: User ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
        '400':
          description: Bad Request
        '401':
          description: Not Authorized
        '500':
          description: Internal Server Error
    patch:
      tags:
        - user
      summary: Update User Profile By User ID
      operationId: test
      parameters:
        - name: userID
          in: query
          description: User ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
        '400':
          description: Bad Request
        '401':
          description: Not Authorized
        '500':
          description: Internal Server Error

  /orders:
    get:
      tags:
        - order
      summary: Get list orders by user ID
      operationId: test
      parameters:
        - name: userID
          in: query
          description: User ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
        '400':
          description: Bad Request
        '401':
          description: Not Authorized
        '500':
          description: Internal Server Error
    post:
      tags:
        - order
      summary: Insert new order
      operationId: test
      responses:
        '200':
          description: Ok
        '400':
          description: Bad Request
        '401':
          description: Not Authorized
        '500':
          description: Internal Server Error
    patch:
      tags:
        - cms
      summary: Update Customer Orders by User ID
      operationId: test
      parameters:
        - name: userID
          in: query
          description: User ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
        '400':
          description: Bad Request
        '401':
          description: Not Authorized
        '500':
          description: Internal Server Error

  /orders/details:
    get:
      tags:
        - order
      summary: Get orders detail by user ID by order ID
      operationId: test
      parameters:
        - name: userID
          in: query
          description: User ID
          required: true
          schema:
            type: string
        - name: orderID
          in: query
          description: Order ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
        '400':
          description: Bad Request
        '401':
          description: Not Authorized
        '500':
          description: Internal Server Error

  /payments:
    post:
      tags:
        - payment
      summary: Insert New Payment Log
      operationId: test
      responses:
        '200':
          description: Ok
        '400':
          description: Bad Request
        '401':
          description: Not Authorized
        '500':
          description: Internal Server Error
 
  /splashs:
    get:
      tags:
        - cms
      summary: Get Splash Screen
      operationId: test
      responses:
        '200':
          description: Ok
        '400':
          description: Bad Request
        '401':
          description: Not Authorized
        '500':
          description: Internal Server Error
    post:
      tags:
        - cms
      summary: Insert New Splash Screen Data
      operationId: test
      responses:
        '200':
          description: Ok
        '400':
          description: Bad Request
        '401':
          description: Not Authorized
        '500':
          description: Internal Server Error
    patch:
      tags:
        - cms
      summary: Update Spash Screen Data
      operationId: test
      responses:
        '200':
          description: Ok
        '400':
          description: Bad Request
        '401':
          description: Not Authorized
        '500':
          description: Internal Server Error
  
  /stores:
    post:
      tags:
        - cms
      summary: Insert New Store Data
      operationId: test
      responses:
        '200':
          description: Ok
        '400':
          description: Bad Request
        '401':
          description: Not Authorized
        '500':
          description: Internal Server Error
    patch:
      tags:
        - cms
      summary: Update Existing Store Data by Store ID
      operationId: test
      responses:
        '200':
          description: Ok
        '400':
          description: Bad Request
        '401':
          description: Not Authorized
        '500':
          description: Internal Server Error

  /reviews:
    get:
      tags:
        - review
      summary: Get review By Product ID
      description: test
      operationId: test
      parameters:
        - name: pagination
          in: query
          description: Pagination
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Limit
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Ok
        '400':
          description: Bad Request
        '401':
          description: Not Authorized
        '500':
          description: Internal Server Error
    post:
      tags:
        - review
      summary: Insert New review By Product ID
      description: test
      operationId: test
      responses:
        '200':
          description: Ok
        '400':
          description: Bad Request
        '401':
          description: Not Authorized
        '500':
          description: Internal Server Error

  /vouchers:
    get:
      tags:
        - voucher
      summary: Get Voucher
      description: test
      operationId: test
      parameters:
        - name: pagination
          in: query
          description: Pagination
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Limit
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Ok
        '400':
          description: Bad Request
        '401':
          description: Not Authorized
        '500':
          description: Internal Server Error
    post:
      tags:
        - cms
      summary: Insert New Voucher
      description: test
      operationId: test
      responses:
        '200':
          description: Ok
        '400':
          description: Bad Request
        '401':
          description: Not Authorized
        '500':
          description: Internal Server Error
    patch:
      tags:
        - cms
      summary: Update Voucher
      description: test
      operationId: test
      responses:
        '200':
          description: Ok
        '400':
          description: Bad Request
        '401':
          description: Not Authorized
        '500':
          description: Internal Server Error

  /vouchers/details:
    get:
      tags:
        - voucher
      summary: Get Voucher Details By User ID
      description: test
      operationId: test
      parameters:
        - name: voucherID
          in: query
          description: Voucher ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
        '400':
          description: Bad Request
        '401':
          description: Not Authorized
        '500':
          description: Internal Server Error
  /wishlist:
    get:
      tags:
        - wishlist
      summary: Get Wishlist by User ID
      operationId: test
      parameters:
        - name: voucherID
          in: query
          description: Voucher ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
        '400':
          description: Bad Request
        '401':
          description: Not Authorized
        '500':
          description: Internal Server Error
    post:
      tags:
        - wishlist
      summary: Insert New Wishlist by User ID
      operationId: test
      parameters:
        - name: voucherID
          in: query
          description: Voucher ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
        '400':
          description: Bad Request
        '401':
          description: Not Authorized
        '500':
          description: Internal Server Error
    delete:
      tags:
        - wishlist
      summary: Delete Wishlist by User ID
      operationId: test
      parameters:
        - name: voucherID
          in: query
          description: Voucher ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
        '400':
          description: Bad Request
        '401':
          description: Not Authorized
        '500':
          description: Internal Server Error

components:
  schemas:
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        petId:
          type: integer
          format: int64
          example: 198772
        quantity:
          type: integer
          format: int32
          example: 7
        shipDate:
          type: string
          format: date-time
        status:
          type: string
          description: Order Status
          example: approved
          enum:
            - placed
            - approved
            - delivered
        complete:
          type: boolean
      xml:
        name: order
    Customer:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 100000
        username:
          type: string
          example: fehguy
        address:
          type: array
          xml:
            name: addresses
            wrapped: true
          items:
            $ref: '#/components/schemas/Address'
      xml:
        name: customer
    Address:
      type: object
      properties:
        street:
          type: string
          example: 437 Lytton
        city:
          type: string
          example: Palo Alto
        state:
          type: string
          example: CA
        zip:
          type: string
          example: '94301'
      xml:
        name: address
    Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Dogs
      xml:
        name: category
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        username:
          type: string
          example: theUser
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: James
        email:
          type: string
          example: john@email.com
        password:
          type: string
          example: '12345'
        phone:
          type: string
          example: '12345'
        userStatus:
          type: integer
          description: User Status
          format: int32
          example: 1
      xml:
        name: user
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: tag
    Pet:
      required:
        - name
        - photoUrls
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: doggie
        category:
          $ref: '#/components/schemas/Category'
        photoUrls:
          type: array
          xml:
            wrapped: true
          items:
            type: string
            xml:
              name: photoUrl
        tags:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/Tag'
        status:
          type: string
          description: pet status in the store
          enum:
            - available
            - pending
            - sold
      xml:
        name: pet
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      xml:
        name: '##default'
  requestBodies:
    Pet:
      description: Pet object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Pet'
        application/xml:
          schema:
            $ref: '#/components/schemas/Pet'
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://petstore3.swagger.io/oauth/authorize
          scopes:
            write:pets: modify pets in your account
            read:pets: read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header